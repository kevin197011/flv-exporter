services:
  # FLV Exporter 服务
  flv-exporter:
    build:
      context: .
      dockerfile: Dockerfile
      # 如果Alpine镜像有问题，可以使用Ubuntu版本
      # dockerfile: Dockerfile.ubuntu
    container_name: flv-exporter
    restart: unless-stopped
    network_mode: "host"  # 使用主机网络，绕过Docker网络限制
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - JAVA_OPTS=-Xms256m -Xmx512m -XX:+UseG1GC -Djava.net.useSystemProxies=true -Dcom.sun.net.ssl.checkRevocation=false -Dtrust_all_cert=true -Djdk.tls.client.protocols=TLSv1.2 -Dhttps.protocols=TLSv1.2 -Dcom.sun.net.ssl.enableECC=false -Djdk.tls.ephemeralDHKeySize=2048
      - LOGGING_LEVEL_ROOT=WARN
      - LOGGING_LEVEL_IO_GITHUB_DEVOPS_FLVEXPORTER=INFO
    volumes:
      - ./logs:/app/logs
      - ./config/application.yml:/app/config/application.yml:ro
    # 使用主机网络时不需要networks和dns配置
    depends_on:
      - prometheus
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Prometheus 监控服务
  prometheus:
    image: prom/prometheus:v2.47.0
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=15d'
      - '--web.enable-lifecycle'
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - monitoring

  # Grafana 可视化服务
  grafana:
    image: grafana/grafana:10.1.0
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    networks:
      - monitoring
    depends_on:
      - prometheus

  # AlertManager 告警服务 (可选)
  alertmanager:
    image: prom/alertmanager:v0.26.0
    container_name: alertmanager
    restart: unless-stopped
    ports:
      - "9093:9093"
    volumes:
      - ./alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml
      - alertmanager_data:/alertmanager
    networks:
      - monitoring
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'

networks:
  monitoring:
    driver: bridge

volumes:
  prometheus_data:
  grafana_data:
  alertmanager_data: